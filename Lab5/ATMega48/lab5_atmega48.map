Archive member included to satisfy reference by file (symbol)

/usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega48.o (exit)
/usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
                              lab5_atmega48.o (__do_copy_data)
/usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
                              lab5_atmega48.o (__do_clear_bss)
/usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libc.a(itoa_ncheck.o)
                              lab5_atmega48.o (__itoa_ncheck)
/usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libc.a(utoa_ncheck.o)
                              /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libc.a(itoa_ncheck.o) (__utoa_common)
/usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libc.a(strrev.o)
                              /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libc.a(utoa_ncheck.o) (strrev)

Allocating common symbols
Common symbol       size              file

temp_string_array   0x2               lab5_atmega48.o
uart_tx_buf         0x28              mega48_uart_functions.o
twi_state           0x1               twi_master.o
twi_buf             0x2               twi_master.o
lm73_wr_buf         0x2               lm73_functions_skel.o
lm73_temp           0x2               lab5_atmega48.o
twi_bus_addr        0x1               twi_master.o
twi_msg_size        0x1               twi_master.o
lm73_rd_buf         0x2               lm73_functions_skel.o
uart_rx_buf         0x28              mega48_uart_functions.o
rx_m128_command     0x1               lab5_atmega48.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega48.o
LOAD lab5_atmega48.o
LOAD twi_master.o
LOAD lm73_functions_skel.o
LOAD mega48_uart_functions.o
START GROUP
LOAD /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libm.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libc.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libatmega48.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x44c
 *(.vectors)
 .vectors       0x0000000000000000       0x34 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega48.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 .progmem.gcc_sw_table
                0x0000000000000034       0xa2 twi_master.o
                0x00000000000000d6                . = ALIGN (0x2)
                0x00000000000000d6                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000000000000d6        0x0 linker stubs
 *(.trampolines*)
                0x00000000000000d6                __trampolines_end = .
 *(.progmem*)
                0x00000000000000d6                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000000000000d6                __ctors_start = .
 *(.ctors)
                0x00000000000000d6                __ctors_end = .
                0x00000000000000d6                __dtors_start = .
 *(.dtors)
                0x00000000000000d6                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000000000000d6        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega48.o
                0x00000000000000d6                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000000000000d6        0xc /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega48.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000000000000e2       0x16 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
                0x00000000000000e2                __do_copy_data
 .init4         0x00000000000000f8       0x10 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
                0x00000000000000f8                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000108        0x4 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega48.o
 *(.init9)
 *(.text)
 .text          0x000000000000010c        0x2 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega48.o
                0x000000000000010c                __vector_22
                0x000000000000010c                __vector_1
                0x000000000000010c                __vector_12
                0x000000000000010c                __bad_interrupt
                0x000000000000010c                __vector_6
                0x000000000000010c                __vector_3
                0x000000000000010c                __vector_23
                0x000000000000010c                __vector_25
                0x000000000000010c                __vector_11
                0x000000000000010c                __vector_13
                0x000000000000010c                __vector_17
                0x000000000000010c                __vector_19
                0x000000000000010c                __vector_7
                0x000000000000010c                __vector_5
                0x000000000000010c                __vector_4
                0x000000000000010c                __vector_9
                0x000000000000010c                __vector_2
                0x000000000000010c                __vector_21
                0x000000000000010c                __vector_15
                0x000000000000010c                __vector_8
                0x000000000000010c                __vector_14
                0x000000000000010c                __vector_10
                0x000000000000010c                __vector_16
                0x000000000000010c                __vector_20
 .text          0x000000000000010e       0x56 lab5_atmega48.o
                0x000000000000010e                __vector_18
 .text          0x0000000000000164      0x172 twi_master.o
                0x0000000000000164                __vector_24
                0x0000000000000278                twi_busy
                0x0000000000000280                twi_start_wr
                0x00000000000002a2                twi_start_rd
                0x00000000000002c4                init_twi
 .text          0x00000000000002d6        0x2 lm73_functions_skel.o
                0x00000000000002d6                lm73_temp_convert
 .text          0x00000000000002d8       0xac mega48_uart_functions.o
                0x00000000000002d8                uart_putc
                0x00000000000002ee                uart_puts
                0x0000000000000314                uart_puts_p
                0x0000000000000348                uart_init
                0x0000000000000368                uart_getc
 .text          0x0000000000000384        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text          0x0000000000000384        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
 .text          0x0000000000000384        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
 .text          0x0000000000000384        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libc.a(itoa_ncheck.o)
 .text          0x0000000000000384        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libc.a(utoa_ncheck.o)
 .text          0x0000000000000384        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libc.a(strrev.o)
                0x0000000000000384                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x0000000000000384       0x5e lab5_atmega48.o
                0x0000000000000384                main
 .text.libgcc.mul
                0x00000000000003e2        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000000003e2        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text.libgcc   0x00000000000003e2        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000000003e2        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000000003e2        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000000003e2        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x00000000000003e2        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000000003e2        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x00000000000003e2        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000000000003e2        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x00000000000003e2        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x00000000000003e2        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x00000000000003e2        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x00000000000003e2        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x00000000000003e2        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000000000003e2        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000000000003e2        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000000000003e2        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000000000003e2        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000000000003e2        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x00000000000003e2        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x00000000000003e2       0x14 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libc.a(itoa_ncheck.o)
                0x00000000000003e2                __itoa_ncheck
 .text.avr-libc
                0x00000000000003f6       0x32 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libc.a(utoa_ncheck.o)
                0x00000000000003f6                __utoa_ncheck
                0x00000000000003f8                __utoa_common
 .text.avr-libc
                0x0000000000000428       0x20 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libc.a(strrev.o)
                0x0000000000000428                strrev
                0x0000000000000448                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000448        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
                0x0000000000000448                exit
                0x0000000000000448                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000448        0x4 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 *(.fini0)
                0x000000000000044c                _etext = .

.data           0x0000000000800100        0x2 load address 0x000000000000044c
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega48.o
 .data          0x0000000000800100        0x1 lab5_atmega48.o
                0x0000000000800100                new_data_needed
 .data          0x0000000000800101        0x0 twi_master.o
 .data          0x0000000000800101        0x0 lm73_functions_skel.o
 .data          0x0000000000800101        0x0 mega48_uart_functions.o
 .data          0x0000000000800101        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .data          0x0000000000800101        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
 .data          0x0000000000800101        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
 .data          0x0000000000800101        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libc.a(itoa_ncheck.o)
 .data          0x0000000000800101        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libc.a(utoa_ncheck.o)
 .data          0x0000000000800101        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libc.a(strrev.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800102                . = ALIGN (0x2)
 *fill*         0x0000000000800101        0x1 
                0x0000000000800102                _edata = .
                0x0000000000800102                PROVIDE (__data_end, .)

.bss            0x0000000000800102       0x5f
                0x0000000000800102                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800102        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega48.o
 .bss           0x0000000000800102        0x0 lab5_atmega48.o
 .bss           0x0000000000800102        0x1 twi_master.o
 .bss           0x0000000000800103        0x0 lm73_functions_skel.o
 .bss           0x0000000000800103        0x0 mega48_uart_functions.o
 .bss           0x0000000000800103        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .bss           0x0000000000800103        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
 .bss           0x0000000000800103        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
 .bss           0x0000000000800103        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libc.a(itoa_ncheck.o)
 .bss           0x0000000000800103        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libc.a(utoa_ncheck.o)
 .bss           0x0000000000800103        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libc.a(strrev.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0000000000800103        0x5 lab5_atmega48.o
                0x0000000000800103                temp_string_array
                0x0000000000800105                lm73_temp
                0x0000000000800107                rx_m128_command
 COMMON         0x0000000000800108        0x5 twi_master.o
                0x0000000000800108                twi_state
                0x0000000000800109                twi_buf
                0x000000000080010b                twi_bus_addr
                0x000000000080010c                twi_msg_size
 COMMON         0x000000000080010d        0x4 lm73_functions_skel.o
                0x000000000080010d                lm73_wr_buf
                0x000000000080010f                lm73_rd_buf
 COMMON         0x0000000000800111       0x50 mega48_uart_functions.o
                0x0000000000800111                uart_tx_buf
                0x0000000000800139                uart_rx_buf
                0x0000000000800161                PROVIDE (__bss_end, .)
                0x000000000000044c                __data_load_start = LOADADDR (.data)
                0x000000000000044e                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800161        0x0
                0x0000000000800161                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800161                PROVIDE (__noinit_end, .)
                0x0000000000800161                _end = .
                0x0000000000800161                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x0000000000000000     0x15e4
 *(.stab)
 .stab          0x0000000000000000      0x66c lab5_atmega48.o
 .stab          0x000000000000066c      0x660 twi_master.o
                                        0x87c (size before relaxing)
 .stab          0x0000000000000ccc      0x348 lm73_functions_skel.o
                                        0x510 (size before relaxing)
 .stab          0x0000000000001014      0x5d0 mega48_uart_functions.o
                                        0x7ec (size before relaxing)

.stabstr        0x0000000000000000     0x109d
 *(.stabstr)
 .stabstr       0x0000000000000000     0x109d lab5_atmega48.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 lab5_atmega48.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000011       0x12 twi_master.o
 .comment       0x0000000000000011       0x12 lm73_functions_skel.o
 .comment       0x0000000000000011       0x12 mega48_uart_functions.o

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega48.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(lab5_atmega48.elf elf32-avr)
LOAD linker stubs
